name: CI - Process latest Svelte 5 release

on:
  schedule:
    # Every day at 10:00
    - cron: '0 10 * * *'

  push:
    branches: ['main']
    paths-ignore:
      - 'README.md'

  pull_request:
    branches: ['main']
    paths-ignore:
      - 'README.md'

permissions:
  contents: write
  actions: read

jobs:
  get_release:
    runs-on: ubuntu-latest

    outputs:
      requires_build: ${{ steps.check_release.outputs.requires_build }}
      svelte_release: ${{ steps.svelte_release.outputs.svelte_release }}
      release_tag: ${{ steps.svelte_release.outputs.release_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest Svelte release
        id: svelte_release
        run: |
          SVELTE_RELEASE=$(curl -s https://api.github.com/repos/sveltejs/svelte/releases | jq -r '.[0].tag_name' | grep 'svelte@5.0.0-next')
          echo "::set-output name=svelte_release::$SVELTE_RELEASE"
          SVELTE_RELEASE_TAG=$(echo "$SVELTE_RELEASE" | sed 's/svelte@//')
          echo "::set-output name=release_tag::$SVELTE_RELEASE_TAG"

      - name: Check if current repo has matching release
        id: check_release
        run: |
          LAST_PROCESSED_VERSION=$(cat release-versions/sveltejs/svelte-latest.txt)
          if echo "$LAST_PROCESSED_VERSION" | grep -q "svelte@${{ steps.svelte_release.outputs.version }}"; then
            echo "::set-output name=requires_build::false"
          else
            echo "::set-output name=requires_build::true"
          fi

  build:
    needs: get_release
    if: needs.get_release.outputs.requires_build == 'true' && needs.get_release.outputs.svelte_release != '' && needs.get_release.outputs.release_tag != ''

    runs-on: ubuntu-latest
    container: node:20 # required for `ai-digest`

    outputs:
      docs_estimated_tokens: ${{ steps.docs_digest.outputs.estimated_tokens }}
      src_estimated_tokens: ${{ steps.src_digest.outputs.estimated_tokens }}
    env:
      RELEASE_TAG: ${{ needs.get_release.outputs.release_tag }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download and unzip Svelte 5 release - $RELEASE_TAG
        id: unpack_release
        run: |
          wget -O $ARCHIVE_PATH $ARCHIVE_URL
          unzip -d ./svelte -q -o $ARCHIVE_PATH
          echo "preview_path=$SVELTE_PATH/sites/svelte-5-preview" >> $GITHUB_OUTPUT
        env:
          ARCHIVE_URL: 'https://github.com/sveltejs/svelte/archive/refs/tags/svelte@${{ needs.get_release.outputs.release_tag }}.zip'
          ARCHIVE_PATH: './zip/svelte@${{ needs.get_release.outputs.release_tag }}.zip'
          SVELTE_PATH: './svelte/svelte-svelte-${{ needs.get_release.outputs.release_tag }}'

      - name: Build docs digest
        id: docs_digest
        uses: ./.github/actions/ai-digest
        with:
          input_path: '${{ steps.unpack_release.outputs.preview_path }}/src/routes/docs/content'
          output_file: 'codebase.md'
          digest_log: 'ingest.md'

      - name: Build src digest
        id: src_digest
        uses: ./.github/actions/ai-digest
        with:
          input_path: '${{ steps.unpack_release.outputs.preview_path }}/src'
          output_file: 'codebase.src.md'
          digest_log: 'ingest.src.md'

      - name: Update processed version
        run: |
          echo "${{ needs.get_release.outputs.release_tag }}" > release-versions/sveltejs/svelte-latest.txt

      - name: Upload docs digest stats
        uses: actions/upload-artifact@v3
        with:
          name: docs-ai-digest
          path: 'ingest.md'

      - name: Upload src digest stats
        uses: actions/upload-artifact@v3
        with:
          name: src-ai-digest
          path: 'ingest.src.md'

      - name: Commit Changes for Svelte 5 release - $RELEASE_TAG
        uses: EndBug/add-and-commit@v9
        with:
          add: |
            codebase*.md
            ingest*.md
            release-versions/sveltejs/svelte-latest.txt
          message: 'update digests from Svelte 5 release, ${{ needs.get_release.outputs.release_tag }}'
